@model Domain.StackTest.Models.StackTestReportTwoStack
@using Domain.StackTest.Models.TestRun
@{
    if (Model!.TestRuns is not { Count: > 0 }) return;
    var firstTestRun = Model.TestRuns.FirstOrDefault()!;
}

<table class="table-subtable-vertical">
    <thead>
        <tr>
            <th scope="row" colspan="2">@Html.DisplayNameFor(m => firstTestRun.RunNumber)</th>
            @foreach (var r in Model.TestRuns)
            {
                <th scope="col">@r.RunNumber</th>
            }
            <th scope="col">Average</th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <th scope="row" rowspan="2">@Html.DisplayNameFor(m => firstTestRun.StackOneGasTemperature)</th>
            <th scope="row">@Model.StackOneName</th>
            @foreach (var r in Model.TestRuns)
            {
                <td>@r.StackOneGasTemperature</td>
            }
            <td></td>
        </tr>
        <tr>
            <th scope="row" class="split-table-header">@Model.StackTwoName</th>
            @foreach (var r in Model.TestRuns)
            {
                <td>@r.StackTwoGasTemperature</td>
            }
            <td></td>
        </tr>

        <tr>
            <th scope="row" rowspan="2">@Html.DisplayNameFor(m => firstTestRun.StackOneGasMoisture)</th>
            <th scope="row">@Model.StackOneName</th>
            @foreach (var r in Model.TestRuns)
            {
                <td>@r.StackOneGasMoisture</td>
            }
            <td></td>
        </tr>
        <tr>
            <th scope="row" class="split-table-header">@Model.StackTwoName</th>
            @foreach (var r in Model.TestRuns)
            {
                <td>@r.StackTwoGasMoisture</td>
            }
            <td></td>
        </tr>

        <tr>
            <th scope="row" rowspan="2">@Html.DisplayNameFor(m => firstTestRun.StackOneGasFlowRateAscfm)</th>
            <th scope="row">@Model.StackOneName</th>
            @foreach (var r in Model.TestRuns)
            {
                <td>@r.StackOneGasFlowRateAscfm</td>
            }
            <td></td>
        </tr>
        <tr>
            <th scope="row" class="split-table-header">@Model.StackTwoName</th>
            @foreach (var r in Model.TestRuns)
            {
                <td>@r.StackTwoGasFlowRateAscfm</td>
            }
            <td></td>
        </tr>

        <tr>
            <th scope="row" rowspan="2">@Html.DisplayNameFor(m => firstTestRun.StackOneGasFlowRateDscfm)</th>
            <th scope="row">@Model.StackOneName</th>
            @foreach (var r in Model.TestRuns)
            {
                <td>@r.StackOneGasFlowRateDscfm</td>
            }
            <td></td>
        </tr>
        <tr>
            <th scope="row" class="split-table-header">@Model.StackTwoName</th>
            @foreach (var r in Model.TestRuns)
            {
                <td>@r.StackTwoGasFlowRateDscfm</td>
            }
            <td></td>
        </tr>

        <tr>
            <th scope="row" rowspan="2">
                @Html.DisplayNameFor(m => firstTestRun.StackOnePollutantConcentration)
                (@Model.StackOneAvgPollutantConcentration.Units)
            </th>
            <th scope="row">@Model.StackOneName</th>
            @foreach (var r in Model.TestRuns)
            {
                <td>@r.StackOnePollutantConcentration</td>
            }
            <td>@Model.StackOneAvgPollutantConcentration.Value</td>
        </tr>
        <tr>
            <th scope="row" class="split-table-header">@Model.StackTwoName</th>
            @foreach (var r in Model.TestRuns)
            {
                <td>@r.StackTwoPollutantConcentration</td>
            }
            <td>@Model.StackTwoAvgPollutantConcentration.Value</td>
        </tr>

        <tr>
            <th scope="row" rowspan="2">
                @Html.DisplayNameFor(m => firstTestRun.StackOneEmissionRate)
                (@Model.StackOneAvgEmissionRate.Units)
            </th>
            <th scope="row">@Model.StackOneName</th>
            @foreach (var r in Model.TestRuns)
            {
                <td>@r.StackOneEmissionRate</td>
            }
            <td>@Model.StackOneAvgEmissionRate.Value</td>
        </tr>
        <tr>
            <th scope="row" class="split-table-header">@Model.StackTwoName</th>
            @foreach (var r in Model.TestRuns)
            {
                <td>@r.StackTwoEmissionRate</td>
            }
            <td>@Model.StackTwoAvgEmissionRate.Value</td>
        </tr>

        <tr>
            <th scope="row" colspan="2">
                @Html.DisplayNameFor(m => firstTestRun.SumEmissionRate)
                (@Model.SumAvgEmissionRate.Units)
            </th>
            @foreach (var r in Model.TestRuns)
            {
                <td>@r.SumEmissionRate</td>
            }
            <td>@Model.SumAvgEmissionRate.Value</td>
        </tr>
    </tbody>
</table>
